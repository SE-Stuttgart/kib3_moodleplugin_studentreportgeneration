{"version":3,"file":"pagination.min.js","sources":["../src/pagination.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * Create a pagination navigation to switch between the different data batches.\n *\n * @module     mod_srg/pagination\n * @copyright  2024 University of Stuttgart <kasra.habib@iste.uni-stuttgart.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Create a page navigation to switch between the different reports data batches.\n * Reload '/mod/srg/report_view.php' for each page and keep the active reportid.\n */\nexport function init() {\n    initPaginationListeners();\n    initPaginationVisibilityStates();\n}\n\n/**\n * Initializes click event listeners for pagination controls.\n * Handles navigation to the appropriate page based on the control clicked\n * (e.g., first, previous, specific page, next, or last).\n *\n * Assumes the presence of a container with the ID `#srg-pagination-container` in the DOM,\n * and that the container includes elements with specific classes:\n * - `.srg-page-nav-first .page-link`\n * - `.srg-page-nav-previous .page-link`\n * - `.srg-page-nav-page .page-link`\n * - `.srg-page-nav-next .page-link`\n * - `.srg-page-nav-last .page-link`\n */\nfunction initPaginationListeners() {\n    const paginationContainer = document.querySelector('#srg-pagination-container');\n\n    const courseModuleId = parseInt(paginationContainer.dataset.coursemoduleid, 10);\n    const activeTabIndex = parseInt(paginationContainer.dataset.activetabindex, 10);\n    const activePageIndex = parseInt(paginationContainer.dataset.activepageindex, 10);\n\n\n    const first = paginationContainer.querySelector(\".srg-page-nav-first .page-link\");\n    const previous = paginationContainer.querySelector(\".srg-page-nav-previous .page-link\");\n    const pages = paginationContainer.querySelectorAll(\".srg-page-nav-page .page-link\");\n    const next = paginationContainer.querySelector(\".srg-page-nav-next .page-link\");\n    const last = paginationContainer.querySelector(\".srg-page-nav-last .page-link\");\n\n    // First Page navigation.\n    first.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n\n        const newUrl = new URL('/mod/srg/report_view.php', window.location.origin);\n        newUrl.searchParams.set('id', courseModuleId);\n        newUrl.searchParams.set('report_id', activeTabIndex);\n        newUrl.searchParams.set('page_index', 0);\n\n        window.location.href = newUrl.toString();\n    });\n\n    // Previous Page navigation.\n    previous.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n\n        const newUrl = new URL('/mod/srg/report_view.php', window.location.origin);\n        newUrl.searchParams.set('id', courseModuleId);\n        newUrl.searchParams.set('report_id', activeTabIndex);\n        newUrl.searchParams.set('page_index', activePageIndex - 1);\n\n        window.location.href = newUrl.toString();\n    });\n\n    // Specific Page navigation.\n    pages.forEach((page, index) => {\n        page.addEventListener(\"click\", (event) => {\n            event.preventDefault();\n\n            const newUrl = new URL('/mod/srg/report_view.php', window.location.origin);\n            newUrl.searchParams.set('id', courseModuleId);\n            newUrl.searchParams.set('report_id', activeTabIndex);\n            newUrl.searchParams.set('page_index', index);\n\n            window.location.href = newUrl.toString();\n        });\n    });\n\n    // Next Page navigation.\n    next.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n\n        const newUrl = new URL('/mod/srg/report_view.php', window.location.origin);\n        newUrl.searchParams.set('id', courseModuleId);\n        newUrl.searchParams.set('report_id', activeTabIndex);\n        newUrl.searchParams.set('page_index', activePageIndex + 1);\n\n        window.location.href = newUrl.toString();\n    });\n\n    // Last Page navigation.\n    last.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n\n        const newUrl = new URL('/mod/srg/report_view.php', window.location.origin);\n        newUrl.searchParams.set('id', courseModuleId);\n        newUrl.searchParams.set('report_id', activeTabIndex);\n        newUrl.searchParams.set('page_index', pages.length - 1);\n\n        window.location.href = newUrl.toString();\n    });\n}\n\n/**\n * Updates the visibility and accessibility states of pagination controls.\n * Highlights the active page, disables navigation controls when appropriate,\n * and hides ellipses or page numbers outside the desired range.\n *\n * Assumes the presence of a container with the ID `#srg-pagination-container` in the DOM,\n * and that the container includes elements with specific classes:\n * - `.srg-page-nav-first`, `.srg-page-nav-previous`, `.srg-page-nav-next`, `.srg-page-nav-last`\n * - `.srg-page-nav-ellipsis-left`, `.srg-page-nav-ellipsis-right`\n * - `.srg-page-nav-page`\n *\n * Visibility logic:\n * - Disables \"First\" and \"Previous\" if on the first page.\n * - Disables \"Last\" and \"Next\" if on the last page.\n * - Hides page numbers outside the offset range from the current page.\n */\nfunction initPaginationVisibilityStates() {\n    const paginationContainer = document.querySelector('#srg-pagination-container');\n\n    const activePageIndex = parseInt(paginationContainer.dataset.activepageindex, 10);\n\n    const first = paginationContainer.querySelector(\".srg-page-nav-first\");\n    const previous = paginationContainer.querySelector(\".srg-page-nav-previous\");\n    const leftEllipsis = paginationContainer.querySelector(\".srg-page-nav-ellipsis-left\");\n    const pages = paginationContainer.querySelectorAll(\".srg-page-nav-page\");\n    const rightEllipsis = paginationContainer.querySelector(\".srg-page-nav-ellipsis-right\");\n    const next = paginationContainer.querySelector(\".srg-page-nav-next\");\n    const last = paginationContainer.querySelector(\".srg-page-nav-last\");\n\n    // We only want to show page numbers close to the current number.\n    const offset = 5;\n\n    const isFirst = activePageIndex === 0;\n    const isLast = activePageIndex === pages.length - 1;\n    const isFirstHidden = activePageIndex - offset > 0;\n    const isLastHidden = activePageIndex + offset < pages.length - 1;\n\n    // Hide pagination if there are zero or one pages.\n    const isAllHidden = pages.length < 2;\n\n    first.classList.toggle(\"disabled\", isFirst);\n    previous.classList.toggle(\"disabled\", isFirst);\n    next.classList.toggle(\"disabled\", isLast);\n    last.classList.toggle(\"disabled\", isLast);\n\n    first.classList.toggle(\"srg-hidden\", isAllHidden);\n    previous.classList.toggle(\"srg-hidden\", isAllHidden);\n    next.classList.toggle(\"srg-hidden\", isAllHidden);\n    last.classList.toggle(\"srg-hidden\", isAllHidden);\n\n    leftEllipsis.classList.toggle(\"srg-hidden\", !isFirstHidden);\n    rightEllipsis.classList.toggle(\"srg-hidden\", !isLastHidden);\n\n    pages.forEach((page, index) => {\n        const isActive = index === activePageIndex;\n        page.classList.toggle(\"active\", isActive);\n        page.setAttribute(\"aria-selected\", isActive.toString());\n\n        const isHidden = Math.abs(activePageIndex - index) > offset;\n        page.classList.toggle(\"srg-hidden\", isHidden || isAllHidden);\n    });\n\n    // We want to start the container hidden for a more clean appearance.\n    paginationContainer.classList.toggle(\"srg-hidden\", false);\n}"],"names":["paginationContainer","document","querySelector","courseModuleId","parseInt","dataset","coursemoduleid","activeTabIndex","activetabindex","activePageIndex","activepageindex","first","previous","pages","querySelectorAll","next","last","addEventListener","event","preventDefault","newUrl","URL","window","location","origin","searchParams","set","href","toString","forEach","page","index","length","initPaginationListeners","leftEllipsis","rightEllipsis","offset","isFirst","isLast","isFirstHidden","isLastHidden","isAllHidden","classList","toggle","isActive","setAttribute","isHidden","Math","abs","initPaginationVisibilityStates"],"mappings":"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"}